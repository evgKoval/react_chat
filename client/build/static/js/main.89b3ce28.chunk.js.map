{"version":3,"sources":["store/constants/action-types.js","store/reducers/index.js","store/index.js","api.js","store/actions/index.js","Components/Header/Header.js","Components/Modals/Create.js","Components/Chat/Message.js","Components/Chat/Chat.js","Components/Auth/Login.js","Components/Auth/Register.js","Components/Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["ADD_CHAT","initialState","currentUser","users","chats","messages","rootReducer","state","action","type","Object","assign","concat","payload","message","chat_id","push","user","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","token","localStorage","getItem","axios","create","baseURL","headers","addChat","dispatch","a","async","API","post","name","created_by","res","chat","id","data","getUserById","userId","get","useStyles","makeStyles","theme","title","marginRight","icon","position","top","paddingRight","Header","props","history","useHistory","useDispatch","jwtDecode","classes","AppBar","color","Toolbar","Typography","variant","component","Link","to","className","Fragment","Button","onClick","removeItem","ModalCreate","open","onClose","React","useEffect","length","index","findIndex","splice","useState","checked","setChecked","chatName","setChatName","fieldEmpty","setFieldEmpty","Dialog","aria-labelledby","DialogTitle","style","width","DialogContent","TextField","autoFocus","label","fullWidth","marginBottom","onChange","e","value","target","error","List","dense","map","labelId","ListItem","key","button","ListItemAvatar","Avatar","src","avatar","ListItemText","primary","ListItemSecondaryAction","Checkbox","edge","currentIndex","indexOf","newChecked","inputProps","DialogActions","then","Message","own","handleEdit","handleDelete","createdAt","text","messageText","setMessageText","editing","setEditing","editingValue","setEditingValue","edited","setEdited","handleEditMessage","currentTarget","querySelector","innerHTML","withoutTime","array","split","shift","join","Paper","alignItems","alt","secondary","marginTop","prettyDate","format","Date","Input","defaultValue","onBlur","editedText","setTimeout","endAdornment","InputAdornment","IconButton","onDoubleClick","href","socket","io","connect","Chat","handleUploadChat","event","file","files","fileName","getTime","emit","fileType","chatId","selectedChatId","setState","created_at","user_id","messagesFiltered","redirect","selectedIndex","chatsFiltered","loadingChats","loadingMessages","access","requestSent","sendInput","createRef","messagesDiv","getChats","this","on","responseAccess","current","scrollTop","scrollHeight","editedMessage","idDeletedMessage","getUsers","filter","toLowerCase","includes","handleEditedMessage","messageId","handleDeleteMessage","height","Grid","container","item","xs","display","flexDirection","justifyContent","paddingTop","paddingBottom","ListItemIcon","textAlign","CircularProgress","size","selected","handleListItemClick","handleSearchChat","borderLeft","handleSearchMessage","ref","chat_name","user_name","user_email","email","InputBase","placeholder","htmlFor","aria-label","handleSendMessage","Component","getMessagesByChatId","chatMessages","sendMessage","Login","password","handleChange","bind","handleSubmit","preventDefault","setItem","catch","response","onSubmit","validators","errorMessages","Register","Profile","updateUser","handleUpload","reader","FileReader","onloadend","result","readAsDataURL","accept","form","FormData","set","put","App","Container","exact","path","Boolean","location","hostname","match","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89b3ce28.chunk.js","sourcesContent":["export const ADD_CHAT = \"ADD_CHAT\";\r\n","import { ADD_CHAT } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  users: [],\r\n  chats: [],\r\n  messages: {}\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_CHAT) {\r\n    return Object.assign({}, state, {\r\n      chats: state.chats.concat(action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"CHATS_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      chats: (state.chats = action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"USERS_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      users: state.users.concat(action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"MESSAGES_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      messages: Object.assign(state.messages, action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"ADD_MESSAGE\") {\r\n    return Object.assign({}, state, {\r\n      message: state.messages[action.payload.chat_id].push(action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"USER_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      user: (state.currentUser = { ...state.currentUser, ...action.payload })\r\n    });\r\n  }\r\n\r\n  if (action.type === \"LOGOUT\") {\r\n    return Object.assign({}, state, {\r\n      users: (state.currentUser = {})\r\n    });\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, storeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst token = localStorage.getItem(\"token\") || \"\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:5000\",\r\n  headers: { \"x-access-token\": token }\r\n});\r\n","import API from \"../../api\";\r\n\r\nimport { ADD_CHAT } from \"../constants/action-types\";\r\n\r\nexport function addChat(payload) {\r\n  return async function(dispatch) {\r\n    const res = await API.post(\"/chats\", {\r\n      name: payload.name,\r\n      created_by: payload.created_by,\r\n      users: payload.users\r\n    });\r\n\r\n    const chat = {\r\n      id: res.data.chat,\r\n      name: payload.name,\r\n      users: payload.users\r\n    };\r\n\r\n    dispatch({ type: ADD_CHAT, payload: chat });\r\n  };\r\n}\r\n\r\nexport function getChats() {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"/chats\");\r\n\r\n    dispatch({ type: \"CHATS_LOADED\", payload: res.data.chats });\r\n  };\r\n}\r\n\r\nexport function getUsers() {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"/users\");\r\n\r\n    dispatch({ type: \"USERS_LOADED\", payload: res.data.users });\r\n  };\r\n}\r\n\r\nexport function getMessagesByChatId(chatId) {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"chats/\" + chatId + \"/messages/\");\r\n\r\n    const chatMessages = {\r\n      [chatId]: res.data.messages\r\n    };\r\n\r\n    dispatch({ type: \"MESSAGES_LOADED\", payload: chatMessages });\r\n  };\r\n}\r\n\r\nexport function sendMessage(payload) {\r\n  return async function(dispatch) {\r\n    const message = await API.post(\"/chats/messages\", {\r\n      chat_id: payload.chat_id,\r\n      text: payload.text\r\n    });\r\n\r\n    message.data.message[\"own\"] = \"true\";\r\n\r\n    dispatch({ type: \"ADD_MESSAGE\", payload: message.data.message });\r\n  };\r\n}\r\n\r\nexport function getUserById(userId) {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"/users/\" + userId);\r\n\r\n    dispatch({ type: \"USER_LOADED\", payload: res.data.user });\r\n  };\r\n}\r\n\r\nexport function updateUser(payload) {\r\n  return async function(dispatch) {\r\n    const form = new FormData();\r\n\r\n    form.set(\"file\", payload.file);\r\n    form.set(\"file_name\", payload.fileName);\r\n    form.set(\"name\", payload.name);\r\n    form.set(\"email\", payload.email);\r\n\r\n    await API.put(\"/users\", form);\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return function(dispatch) {\r\n    dispatch({ type: \"LOGOUT\" });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\n\r\nimport { getUserById, logout } from \"../../store/actions/index\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginRight: \"auto\"\r\n  },\r\n  icon: {\r\n    position: \"relative\",\r\n    top: 5,\r\n    paddingRight: 5\r\n  }\r\n}));\r\n\r\nfunction Header(props) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token !== null) {\r\n    dispatch(getUserById(jwtDecode(token).userId));\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n\r\n    localStorage.removeItem(\"token\");\r\n\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"primary\">\r\n      <Toolbar>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component={Link}\r\n          to=\"/\"\r\n          className={classes.title}\r\n        >\r\n          <TelegramIcon className={classes.icon} />\r\n          ReactChat\r\n        </Typography>\r\n        {token === null ? (\r\n          <React.Fragment>\r\n            <Button color=\"inherit\" component={Link} to=\"/login\">\r\n              Login\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/register\">\r\n              Register\r\n            </Button>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Button color=\"inherit\" component={Link} to=\"/profile\">\r\n              Profile\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={handleLogout}>\r\n              Logout\r\n            </Button>\r\n          </React.Fragment>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport { addChat } from \"../../store/actions/index\";\r\n\r\nfunction ModalCreate(props) {\r\n  const { open, onClose, userId, users } = props;\r\n\r\n  React.useEffect(() => {\r\n    if (users.length !== 0) {\r\n      const index = users.findIndex(user => user.id === userId);\r\n      users.splice(index, 1);\r\n    }\r\n  }, [userId, users]);\r\n\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [chatName, setChatName] = React.useState(\"\");\r\n  const [fieldEmpty, setFieldEmpty] = React.useState(false);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleChatName = value => {\r\n    setChatName(value);\r\n    setFieldEmpty(false);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const createChat = () => {\r\n    if (chatName === \"\") {\r\n      setFieldEmpty(true);\r\n\r\n      return;\r\n    } else {\r\n      setFieldEmpty(false);\r\n    }\r\n\r\n    dispatch(\r\n      addChat({\r\n        name: chatName,\r\n        created_by: userId,\r\n        users: checked\r\n      })\r\n    ).then(() => onClose());\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"modal-create\" open={open} onClose={onClose}>\r\n      <DialogTitle id=\"simple-dialog-title\" style={{ width: \"480px\" }}>\r\n        Create a new chat\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          id=\"name\"\r\n          label=\"Enter chat name\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          onChange={e => {\r\n            handleChatName(e.target.value);\r\n          }}\r\n          error={fieldEmpty}\r\n        />\r\n        <List dense>\r\n          {users.map((user, index) => {\r\n            const labelId = `checkbox-list-secondary-label-${user.id}`;\r\n            return (\r\n              <ListItem key={user.id} button>\r\n                <ListItemAvatar>\r\n                  <Avatar src={user.avatar} />\r\n                </ListItemAvatar>\r\n                <ListItemText id={labelId} primary={user.name} />\r\n                <ListItemSecondaryAction>\r\n                  <Checkbox\r\n                    edge=\"end\"\r\n                    onChange={handleToggle(user.id)}\r\n                    checked={checked.indexOf(user.id) !== -1}\r\n                    inputProps={{ \"aria-labelledby\": labelId }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={createChat} color=\"primary\">\r\n          Create\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nModalCreate.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n  users: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ModalCreate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport prettyDate from \"pretty-date\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\n\r\nexport default function Message(props) {\r\n  const {\r\n    id,\r\n    name,\r\n    avatar,\r\n    own,\r\n    type,\r\n    handleEdit,\r\n    handleDelete,\r\n    createdAt\r\n  } = props;\r\n\r\n  const [messageText, setMessageText] = React.useState(props.text);\r\n  const [editing, setEditing] = React.useState(false);\r\n  const [editingValue, setEditingValue] = React.useState(\"\");\r\n  const [edited, setEdited] = React.useState(props.edited);\r\n\r\n  const handleEditMessage = e => {\r\n    if (own !== \"true\") {\r\n      return;\r\n    }\r\n\r\n    const text = e.currentTarget.querySelector(\"span.message-text\").innerHTML;\r\n    setEditingValue(text);\r\n\r\n    setEditing(true);\r\n  };\r\n\r\n  const editedMessage = e => {\r\n    const editedText = e.currentTarget;\r\n\r\n    if (editedText.value === messageText || editedText.value === \"\") {\r\n      setTimeout(() => {\r\n        setEditing(false);\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    handleEdit(editedText.value, id);\r\n\r\n    setMessageText(editedText.value);\r\n\r\n    setTimeout(() => {\r\n      setEditing(false);\r\n    }, 100);\r\n    setEdited(true);\r\n  };\r\n\r\n  const handlerDelete = () => {\r\n    handleDelete(id);\r\n  };\r\n\r\n  const withoutTime = text => {\r\n    const array = text.split(\"_\");\r\n\r\n    array.shift();\r\n\r\n    return array.join(\"_\");\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      className={\r\n        \"chat-message \" +\r\n        (own === \"true\" ? \"chat-message-own \" : null) +\r\n        (editing ? \"full-width\" : null)\r\n      }\r\n    >\r\n      {type === \"image/jpeg\" ||\r\n      type === \"image/png\" ||\r\n      type === \"image/webp\" ||\r\n      type === \"image/gif\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <img\r\n                  alt={messageText}\r\n                  src={\r\n                    \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                    messageText\r\n                  }\r\n                  style={{ width: \"100%\", marginTop: 8 }}\r\n                />\r\n                <span className=\"created-at\">\r\n                  {prettyDate.format(new Date(createdAt))}\r\n                </span>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      ) : type === \"text\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          {editing ? (\r\n            <Input\r\n              defaultValue={editingValue}\r\n              autoFocus\r\n              onBlur={editedMessage}\r\n              style={{ width: \"100%\" }}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton edge=\"end\" onClick={handlerDelete}>\r\n                    <DeleteIcon className=\"message-delete\" />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          ) : (\r\n            <ListItemText\r\n              onDoubleClick={handleEditMessage}\r\n              primary={own !== \"false\" ? null : name}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    <span className=\"message-text\">{messageText}</span>\r\n\r\n                    {edited ? (\r\n                      <Typography variant=\"caption\">edited</Typography>\r\n                    ) : null}\r\n                    <span className=\"created-at\">\r\n                      {prettyDate.format(new Date(createdAt))}\r\n                    </span>\r\n                  </Typography>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          )}\r\n        </ListItem>\r\n      ) : type === \"application/pdf\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            onDoubleClick={handleEditMessage}\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  <a\r\n                    className=\"message-pdf\"\r\n                    href={\r\n                      \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                      messageText\r\n                    }\r\n                  >\r\n                    <PictureAsPdfIcon />\r\n                    {withoutTime(messageText)}\r\n                  </a>\r\n\r\n                  <span className=\"created-at\">\r\n                    {prettyDate.format(new Date(createdAt))}\r\n                  </span>\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      ) : type === \"application/x-zip-compressed\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            onDoubleClick={handleEditMessage}\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  <a\r\n                    className=\"message-pdf\"\r\n                    href={\r\n                      \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                      messageText\r\n                    }\r\n                  >\r\n                    <ArchiveIcon />\r\n                    {withoutTime(messageText)}\r\n                  </a>\r\n\r\n                  <span className=\"created-at\">\r\n                    {prettyDate.format(new Date(createdAt))}\r\n                  </span>\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      ) : (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            onDoubleClick={handleEditMessage}\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  <a\r\n                    className=\"message-pdf\"\r\n                    href={\r\n                      \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                      messageText\r\n                    }\r\n                  >\r\n                    <FileCopyIcon />\r\n                    {withoutTime(messageText)}\r\n                  </a>\r\n\r\n                  <span className=\"created-at\">\r\n                    {prettyDate.format(new Date(createdAt))}\r\n                  </span>\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMessage.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  own: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  edited: PropTypes.bool,\r\n  handleEdit: PropTypes.func,\r\n  createdAt: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport \"./Chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { Redirect } from \"react-router\";\r\nimport API from \"../../api\";\r\n\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nimport ModalCreate from \"../Modals/Create\";\r\nimport Message from \"./Message\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\n\r\n// import { getChatsSocket, getMessagesById, sendMessage } from \"../../socket\";\r\n\r\nimport {\r\n  addChat,\r\n  getChats,\r\n  getUsers,\r\n  getMessagesByChatId,\r\n  sendMessage\r\n} from \"../../store/actions/index\";\r\n\r\nconst socket = io.connect(\"http://localhost:5000\");\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chats: state.chats,\r\n    users: state.users,\r\n    messages: state.messages,\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addChat: chat => dispatch(addChat(chat)),\r\n    getChats: () => dispatch(getChats()),\r\n    getUsers: () => dispatch(getUsers()),\r\n    getMessagesByChatId: chatId => dispatch(getMessagesByChatId(chatId)),\r\n    sendMessage: message => dispatch(sendMessage(message))\r\n  };\r\n}\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      error: null,\r\n      selectedIndex: 0,\r\n      selectedChatId: 0,\r\n      open: false,\r\n      userId: 0,\r\n      chats: [],\r\n      chatsFiltered: [],\r\n      messages: [],\r\n      messagesFiltered: [],\r\n      loadingChats: true,\r\n      loadingMessages: true,\r\n      access: false,\r\n      requestSent: false\r\n    };\r\n\r\n    this.sendInput = React.createRef();\r\n    this.messagesDiv = React.createRef();\r\n\r\n    this.getChats = null;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (token === null) {\r\n      this.setState({ redirect: true });\r\n    } else {\r\n      this.setState({\r\n        userId: jwtDecode(token).userId\r\n      });\r\n    }\r\n\r\n    this.props.getChats().then(() => {\r\n      if (this.props.chats.length !== 0) {\r\n        const chatId = this.props.chats[0].id;\r\n        const userId = jwtDecode(token).userId;\r\n\r\n        this.setState({ selectedChatId: chatId, loadingChats: false });\r\n\r\n        socket.emit(\"get access\", {\r\n          chatId,\r\n          userId\r\n        });\r\n      } else {\r\n        this.setState({ loadingChats: false, loadingMessages: false });\r\n      }\r\n    });\r\n\r\n    socket.on(\"get access\", responseAccess => {\r\n      this.setState({ access: responseAccess });\r\n\r\n      if (responseAccess) {\r\n        socket.emit(\"get messages\", {\r\n          userId: this.state.userId,\r\n          chatId: this.state.selectedChatId\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on(\"get messages\", messages => {\r\n      this.setState(\r\n        {\r\n          messages,\r\n          messagesFiltered: messages,\r\n          loadingMessages: false\r\n        },\r\n        () => {\r\n          this.messagesDiv.current.scrollTop = this.messagesDiv.current.scrollHeight;\r\n        }\r\n      );\r\n    });\r\n\r\n    socket.on(\"chat message\", message => {\r\n      this.setState({\r\n        messages: [...this.state.messages, message],\r\n        messagesFiltered: [...this.state.messages, message]\r\n      });\r\n    });\r\n\r\n    socket.on(\"edit message\", editedMessage => {\r\n      this.setState({ loadingMessages: true });\r\n\r\n      const messages = [...this.state.messages];\r\n\r\n      const index = messages.findIndex(\r\n        message => message.id === editedMessage.id\r\n      );\r\n      messages[index] = editedMessage;\r\n\r\n      this.setState({\r\n        messages,\r\n        messagesFiltered: messages,\r\n        loadingMessages: false\r\n      });\r\n    });\r\n\r\n    socket.on(\"delete message\", idDeletedMessage => {\r\n      this.setState({ loadingMessages: true });\r\n\r\n      const messages = [...this.state.messages];\r\n\r\n      const index = messages.findIndex(\r\n        message => message.id === idDeletedMessage\r\n      );\r\n\r\n      messages.splice(index, 1);\r\n\r\n      this.setState({\r\n        messages,\r\n        messagesFiltered: messages,\r\n        loadingMessages: false\r\n      });\r\n    });\r\n\r\n    socket.on(\"get access\", responseAccess => {\r\n      if (responseAccess) {\r\n        socket.emit(\"get messages\", {\r\n          userId: this.state.userId,\r\n          chatId: this.state.selectedChatId\r\n        });\r\n\r\n        this.setState({ access: responseAccess });\r\n      } else {\r\n        this.setState({ access: responseAccess, loadingMessages: false });\r\n      }\r\n    });\r\n\r\n    this.props.getUsers();\r\n  }\r\n\r\n  handleSearchChat(value) {\r\n    const chats = [...this.state.chats];\r\n\r\n    if (value === \"\") {\r\n      this.setState({ chatsFiltered: chats });\r\n    }\r\n\r\n    const chatsFiltered = chats.filter(chat =>\r\n      chat.name.toLowerCase().includes(value)\r\n    );\r\n\r\n    this.setState({ chatsFiltered });\r\n  }\r\n\r\n  handleSearchMessage(value) {\r\n    const messages = [...this.state.messages];\r\n\r\n    if (value === \"\") {\r\n      this.setState({ messagesFiltered: messages });\r\n    }\r\n\r\n    const messagesFiltered = messages.filter(message =>\r\n      message.text.toLowerCase().includes(value)\r\n    );\r\n\r\n    this.setState({ messagesFiltered });\r\n  }\r\n\r\n  async handleSendMessage() {\r\n    const sendInput = await this.sendInput.current.querySelector(\"input\");\r\n\r\n    if (sendInput.value === \"\") return;\r\n\r\n    socket.emit(\"chat message\", {\r\n      userId: this.state.userId,\r\n      chatId: this.state.selectedChatId,\r\n      text: sendInput.value\r\n    });\r\n\r\n    this.setState({\r\n      messages: [\r\n        ...this.state.messages,\r\n        {\r\n          created_at: new Date(),\r\n          text: sendInput.value,\r\n          chat_id: this.state.selectedChatId,\r\n          user_id: this.state.userId,\r\n          edited: false,\r\n          type: \"text\",\r\n          own: \"true\"\r\n        }\r\n      ],\r\n      messagesFiltered: [\r\n        ...this.state.messagesFiltered,\r\n        {\r\n          created_at: new Date(),\r\n          text: sendInput.value,\r\n          chat_id: this.state.selectedChatId,\r\n          user_id: this.state.userId,\r\n          edited: false,\r\n          type: \"text\",\r\n          own: \"true\"\r\n        }\r\n      ]\r\n    });\r\n\r\n    sendInput.value = \"\";\r\n  }\r\n\r\n  handleUploadChat = event => {\r\n    let file = event.currentTarget.files[0];\r\n\r\n    const time = new Date().getTime();\r\n\r\n    const fileName = time + \"_\" + file.name;\r\n\r\n    socket.emit(\r\n      \"chat file\",\r\n      {\r\n        file,\r\n        fileType: file.type,\r\n        fileName,\r\n        userId: this.state.userId,\r\n        chatId: this.state.selectedChatId\r\n      },\r\n      () => {\r\n        this.setState({\r\n          messages: [\r\n            ...this.state.messages,\r\n            {\r\n              created_at: new Date(),\r\n              text: fileName,\r\n              chat_id: this.state.selectedChatId,\r\n              user_id: this.state.userId,\r\n              edited: false,\r\n              type: file.type,\r\n              own: \"true\"\r\n            }\r\n          ],\r\n          messagesFiltered: [\r\n            ...this.state.messagesFiltered,\r\n            {\r\n              created_at: new Date(),\r\n              text: fileName,\r\n              chat_id: this.state.selectedChatId,\r\n              user_id: this.state.userId,\r\n              edited: false,\r\n              type: file.type,\r\n              own: \"true\"\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    const handleListItemClick = (index, chatId) => {\r\n      this.setState({ requestSent: false });\r\n\r\n      socket.emit(\"leave chat\", { chatId: this.state.selectedChatId });\r\n\r\n      this.setState({\r\n        selectedIndex: index,\r\n        selectedChatId: chatId,\r\n        loadingMessages: true\r\n      });\r\n\r\n      socket.emit(\"get access\", {\r\n        chatId,\r\n        userId: this.state.userId\r\n      });\r\n\r\n      // socket.emit(\"get messages\", {\r\n      //   userId: this.state.userId,\r\n      //   chatId: chatId\r\n      // });\r\n\r\n      this.sendInput.current.querySelector(\"input\").value = \"\";\r\n    };\r\n\r\n    const handleClickOpenModal = () => {\r\n      this.setState({ open: true });\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n      this.setState({ open: false });\r\n    };\r\n\r\n    const handleEditedMessage = (text, messageId) => {\r\n      socket.emit(\"edit message\", {\r\n        text,\r\n        messageId,\r\n        chatId: this.state.selectedChatId\r\n      });\r\n    };\r\n\r\n    const handleDeleteMessage = messageId => {\r\n      socket.emit(\"delete message\", {\r\n        messageId,\r\n        chatId: this.state.selectedChatId\r\n      });\r\n    };\r\n\r\n    const handleRequest = () => {\r\n      const chat = this.props.chats.filter(\r\n        chat => chat.id === this.state.selectedChatId\r\n      );\r\n\r\n      API.post(\"/request\", {\r\n        chat_id: this.state.selectedChatId,\r\n        chat_name: chat[0].name,\r\n        user_id: this.state.userId,\r\n        user_name: this.props.currentUser.name,\r\n        user_email: this.props.currentUser.email\r\n      }).then(() => this.setState({ requestSent: true }));\r\n    };\r\n\r\n    return (\r\n      <Paper style={{ marginTop: 32, height: \"624px\", marginBottom: 32 }}>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={3}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              height: \"624px\"\r\n            }}\r\n          >\r\n            <List component=\"nav\" className=\"chat-list\">\r\n              <ListItem\r\n                button\r\n                style={{ paddingTop: \"12px\", paddingBottom: \"12px\" }}\r\n                onClick={handleClickOpenModal}\r\n                className=\"btn-new-chat\"\r\n              >\r\n                <ListItemIcon>\r\n                  <PostAddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Create a new chat\"\r\n                  className=\"btn-new-chat-text\"\r\n                />\r\n              </ListItem>\r\n              <div className=\"chats\">\r\n                {this.state.loadingChats === true ? (\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    <CircularProgress\r\n                      color=\"secondary\"\r\n                      size={30}\r\n                      style={{ textAlign: \"center\" }}\r\n                    />\r\n                  </div>\r\n                ) : this.props.chats.length === 0 ? (\r\n                  <h5 style={{ textAlign: \"center\" }}>\r\n                    There are no chats by this query\r\n                  </h5>\r\n                ) : (\r\n                  this.props.chats.map((chat, index) => {\r\n                    return (\r\n                      <ListItem\r\n                        key={index}\r\n                        button\r\n                        selected={this.state.selectedIndex === index}\r\n                        onClick={event => handleListItemClick(index, chat.id)}\r\n                      >\r\n                        <ListItemText primary={chat.name} />\r\n                      </ListItem>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n            </List>\r\n            <TextField\r\n              id=\"chat-search\"\r\n              label=\"Search by chat name\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              onChange={e => {\r\n                this.handleSearchChat(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={9}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              height: \"624px\",\r\n              borderLeft: \"1px solid rgba(0, 0, 0, .14)\"\r\n            }}\r\n          >\r\n            <TextField\r\n              id=\"message-search\"\r\n              label=\"Search by message\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              onChange={e => {\r\n                this.handleSearchMessage(e.target.value);\r\n              }}\r\n            />\r\n            <div ref={this.messagesDiv} className=\"chat-messages\">\r\n              {this.state.loadingMessages === true ? (\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <CircularProgress\r\n                    color=\"secondary\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  />\r\n                </div>\r\n              ) : this.state.access ? (\r\n                this.state.messagesFiltered.length === 0 ? (\r\n                  <h3 style={{ textAlign: \"center\" }}>\r\n                    There are no messages in this chat\r\n                  </h3>\r\n                ) : (\r\n                  this.state.messagesFiltered.map((message, index) => {\r\n                    return (\r\n                      <Message\r\n                        key={index}\r\n                        id={message.id}\r\n                        name={message.name}\r\n                        avatar={message.avatar}\r\n                        text={message.text}\r\n                        own={message.own}\r\n                        type={message.type}\r\n                        edited={message.edited}\r\n                        handleEdit={handleEditedMessage}\r\n                        handleDelete={handleDeleteMessage}\r\n                        createdAt={message.created_at}\r\n                      />\r\n                    );\r\n                  })\r\n                )\r\n              ) : (\r\n                <React.Fragment>\r\n                  <h3 style={{ textAlign: \"center\" }}>\r\n                    You have no permission to join this chat\r\n                  </h3>\r\n\r\n                  {this.state.requestSent ? (\r\n                    <h4 style={{ textAlign: \"center\", marginTop: 0 }}>\r\n                      Request has been sent\r\n                    </h4>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={handleRequest}\r\n                    >\r\n                      Send a request to join\r\n                    </Button>\r\n                  )}\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n            <Paper className=\"message-form\">\r\n              <InputBase\r\n                className=\"message-input\"\r\n                placeholder=\"...\"\r\n                ref={this.sendInput}\r\n              />\r\n              <input\r\n                style={{ display: \"none\" }}\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n                onChange={this.handleUploadChat}\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                >\r\n                  <AttachFileIcon />\r\n                </IconButton>\r\n              </label>\r\n              <IconButton\r\n                className=\"message-icon\"\r\n                aria-label=\"search\"\r\n                onClick={event => this.handleSendMessage(event)}\r\n              >\r\n                <SendIcon color=\"primary\" />\r\n              </IconButton>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <ModalCreate\r\n          open={this.state.open}\r\n          onClose={handleCloseModal}\r\n          userId={this.state.userId}\r\n          users={this.props.users}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React from \"react\";\r\nimport API from \"../../api\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    API.post(\"/login\", {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    })\r\n      .then(res => {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n\r\n        this.setState({ redirect: true });\r\n      })\r\n      .catch(error => this.setState({ error: error.response.data.message }));\r\n  }\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleSubmit} style={{ marginBottom: 32 }}>\r\n        <h1 style={{ marginBottom: 24 }}>Login</h1>\r\n        <TextValidator\r\n          name=\"email\"\r\n          label=\"Your email\"\r\n          variant=\"outlined\"\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"isEmail\"]}\r\n          errorMessages={[\"This field is required\", \"Email is not valid\"]}\r\n        />\r\n        <TextValidator\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={this.state.password}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"minStringLength:6\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"This field must be equal 6 or more symbols\"\r\n          ]}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          fullWidth\r\n        >\r\n          Sign In\r\n        </Button>\r\n        {this.state.error != null ? (\r\n          <h3 className=\"text-error\">{this.state.error}</h3>\r\n        ) : null}\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport API from \"../../api\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirect: false,\r\n      error: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    API.post(\"/register\", {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    })\r\n      .then(res => {\r\n        this.setState({ redirect: true });\r\n      })\r\n      .catch(error => this.setState({ error: error.response.data.message }));\r\n  }\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleSubmit} style={{ marginBottom: 32 }}>\r\n        <h1 style={{ marginBottom: 24 }}>Register</h1>\r\n        <TextValidator\r\n          name=\"name\"\r\n          label=\"Your name\"\r\n          variant=\"outlined\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"minStringLength:2\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"This field must be equal 2 or more symbols\"\r\n          ]}\r\n        />\r\n        <TextValidator\r\n          name=\"email\"\r\n          label=\"Your email\"\r\n          variant=\"outlined\"\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"isEmail\"]}\r\n          errorMessages={[\"This field is required\", \"Email is not valid\"]}\r\n        />\r\n        <TextValidator\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={this.state.password}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"minStringLength:6\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"This field must be equal 6 or more symbols\"\r\n          ]}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          fullWidth\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        {this.state.error != null ? (\r\n          <h3 className=\"text-error\">{this.state.error}</h3>\r\n        ) : null}\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport { getUserById, updateUser } from \"../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { currentUser: state.currentUser };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getUserById: user => dispatch(getUserById(user)),\r\n    updateUser: user => dispatch(updateUser(user))\r\n  };\r\n}\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      error: null,\r\n      name: \"\",\r\n      email: \"\",\r\n      avatar: null,\r\n      file: null,\r\n      fileName: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      this.setState({ redirect: true });\r\n    }\r\n\r\n    const userId = jwtDecode(token).userId;\r\n\r\n    this.props.getUserById(userId).then(() =>\r\n      this.setState({\r\n        name: this.props.currentUser.name,\r\n        email: this.props.currentUser.email,\r\n        avatar:\r\n          \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" +\r\n          this.props.currentUser.avatar\r\n      })\r\n    );\r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.name === \"\" || this.state.email === \"\") return;\r\n\r\n    this.props.updateUser({\r\n      file: this.state.file,\r\n      fileName: this.state.fileName,\r\n      name: this.state.name,\r\n      email: this.state.email\r\n    });\r\n  };\r\n\r\n  handleUpload = event => {\r\n    event.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = event.currentTarget.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        fileName: this.props.currentUser.id + \"_\" + file.name,\r\n        avatar: reader.result\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleSubmit} style={{ marginBottom: 32 }}>\r\n        <h1 style={{ marginBottom: 24 }}>Your profile</h1>\r\n        <Avatar\r\n          src={this.state.avatar}\r\n          style={{ marginBottom: 16, width: 150, height: 150 }}\r\n        />\r\n        <input\r\n          accept=\"image/*\"\r\n          id=\"outlined-button-file\"\r\n          type=\"file\"\r\n          style={{ display: \"none\" }}\r\n          onChange={this.handleUpload}\r\n        />\r\n        <label htmlFor=\"outlined-button-file\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"span\"\r\n            style={{ width: 150, marginBottom: 32 }}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </label>\r\n        <TextValidator\r\n          name=\"name\"\r\n          label=\"Your name\"\r\n          variant=\"outlined\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\"]}\r\n          errorMessages={[\"This field is required\"]}\r\n        />\r\n        <TextValidator\r\n          name=\"email\"\r\n          label=\"Your email\"\r\n          variant=\"outlined\"\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"isEmail\"]}\r\n          errorMessages={[\"This field is required\", \"Email is not valid\"]}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          fullWidth\r\n        >\r\n          Update profile data\r\n        </Button>\r\n        {this.state.error != null ? (\r\n          <h3 className=\"text-error\">{this.state.error}</h3>\r\n        ) : null}\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Header from \"./Components/Header/Header\";\r\nimport Chat from \"./Components/Chat/Chat\";\r\nimport Login from \"./Components/Auth/Login\";\r\nimport Register from \"./Components/Auth/Register\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Container>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Chat />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}