{"version":3,"sources":["store/constants/action-types.js","store/reducers/index.js","store/index.js","api.js","store/actions/index.js","Components/Header/Header.js","Components/Modals/Create.js","Components/Chat/Message.js","Components/Chat/Chat.js","Components/Auth/Login.js","Components/Auth/Register.js","Components/Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["ADD_CHAT","initialState","currentUser","users","chats","messages","rootReducer","state","action","type","Object","assign","concat","payload","index","findIndex","chat","id","message","chat_id","push","user","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","token","localStorage","getItem","axios","create","baseURL","headers","addChat","dispatch","a","async","API","post","name","created_by","res","data","getUserById","userId","get","useStyles","makeStyles","theme","title","marginRight","icon","position","top","paddingRight","Header","props","history","useHistory","useDispatch","jwtDecode","classes","AppBar","color","Toolbar","Typography","variant","component","Link","to","className","Fragment","Button","onClick","removeItem","ModalCreate","open","onClose","edit","chatId","React","useState","checked","setChecked","chatName","setChatName","fieldEmpty","setFieldEmpty","useEffect","length","splice","then","array","map","i","handleOnClose","Dialog","aria-labelledby","DialogTitle","style","width","DialogContent","TextField","autoFocus","value","label","fullWidth","marginBottom","onChange","e","target","error","List","dense","labelId","ListItem","key","button","ListItemAvatar","Avatar","src","avatar","ListItemText","primary","ListItemSecondaryAction","Checkbox","edge","currentIndex","indexOf","newChecked","inputProps","DialogActions","put","Message","own","handleEdit","handleDelete","createdAt","text","messageText","setMessageText","editing","setEditing","editingValue","setEditingValue","edited","setEdited","handleEditMessage","currentTarget","querySelector","innerHTML","withoutTime","split","shift","join","Paper","alignItems","alt","secondary","marginTop","prettyDate","format","Date","Input","defaultValue","onBlur","editedText","setTimeout","endAdornment","InputAdornment","IconButton","onDoubleClick","href","socket","io","connect","Chat","handleUploadChat","event","file","files","fileName","getTime","emit","fileType","selectedChatId","setState","created_at","user_id","messagesFiltered","redirect","selectedIndex","chatsFiltered","loadingChats","loadingMessages","access","requestSent","notificate","modalEdit","sendInput","createRef","messagesDiv","getChats","urlBase64ToUint8Array","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","charCodeAt","this","url","location","hash","match","parseInt","indexForSelected","on","responseAccess","current","scrollTop","scrollHeight","Notification","body","tag","onclick","preventDefault","editedMessage","idDeletedMessage","getUsers","navigator","serviceWorker","ready","serviceWorkerRegistration","options","userVisibleOnly","applicationServerKey","pushManager","subscribe","pushSubscription","console","log","filter","toLowerCase","includes","handleClickOpenModal","handleEditedMessage","messageId","handleDeleteMessage","height","Grid","container","item","xs","display","flexDirection","justifyContent","paddingTop","paddingBottom","ListItemIcon","textAlign","CircularProgress","size","selected","handleListItemClick","handleSearchChat","borderLeft","handleSearchMessage","ref","chat_name","user_name","user_email","email","InputBase","placeholder","htmlFor","aria-label","handleSendMessage","Component","getMessagesByChatId","chatMessages","sendMessage","Login","password","handleChange","bind","handleSubmit","setItem","catch","response","onSubmit","validators","errorMessages","Register","Profile","updateUser","handleUpload","reader","FileReader","onloadend","result","readAsDataURL","accept","form","FormData","set","App","Container","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createBrowserHistory","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","status","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e5633313.chunk.js","sourcesContent":["export const ADD_CHAT = \"ADD_CHAT\";\r\n","import { ADD_CHAT } from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  currentUser: {},\r\n  users: [],\r\n  chats: [],\r\n  messages: {}\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n  if (action.type === ADD_CHAT) {\r\n    return Object.assign({}, state, {\r\n      chats: state.chats.concat(action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"CHATS_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      chats: (state.chats = action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"EDIT_CHAT\") {\r\n    state.chats = [...state.chats];\r\n\r\n    const index = state.chats.findIndex(chat => chat.id === action.payload.id);\r\n    state.chats[index] = action.payload;\r\n\r\n    return Object.assign({}, state, {\r\n      chats: state.chats\r\n    });\r\n  }\r\n\r\n  if (action.type === \"USERS_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      users: state.users.concat(action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"MESSAGES_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      messages: Object.assign(state.messages, action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"ADD_MESSAGE\") {\r\n    return Object.assign({}, state, {\r\n      message: state.messages[action.payload.chat_id].push(action.payload)\r\n    });\r\n  }\r\n\r\n  if (action.type === \"USER_LOADED\") {\r\n    return Object.assign({}, state, {\r\n      user: (state.currentUser = { ...state.currentUser, ...action.payload })\r\n    });\r\n  }\r\n\r\n  if (action.type === \"LOGOUT\") {\r\n    return Object.assign({}, state, {\r\n      users: (state.currentUser = {})\r\n    });\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, storeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\n\r\nconst token = localStorage.getItem(\"token\") || \"\";\r\n\r\nexport default axios.create({\r\n  // baseURL: \"https://reactchats:5000\",\r\n  baseURL: \"http://localhost:5000\",\r\n  headers: { \"x-access-token\": token }\r\n});\r\n","import API from \"../../api\";\r\n\r\nimport { ADD_CHAT } from \"../constants/action-types\";\r\n\r\nexport function addChat(payload) {\r\n  return async function(dispatch) {\r\n    const res = await API.post(\"/chats\", {\r\n      name: payload.name,\r\n      created_by: payload.created_by,\r\n      users: payload.users\r\n    });\r\n\r\n    const chat = {\r\n      id: res.data.chat,\r\n      name: payload.name,\r\n      users: payload.users\r\n    };\r\n\r\n    dispatch({ type: ADD_CHAT, payload: chat });\r\n  };\r\n}\r\n\r\nexport function getChats() {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"/chats\");\r\n\r\n    dispatch({ type: \"CHATS_LOADED\", payload: res.data.chats });\r\n  };\r\n}\r\n\r\nexport function editChat(payload) {\r\n  return async function(dispatch) {\r\n    API.put(\"/chat\", {\r\n      chat_id: payload.chat_id,\r\n      name: payload.name,\r\n      created_by: payload.created_by,\r\n      users: payload.users\r\n    });\r\n\r\n    const chat = {\r\n      id: payload.chat_id,\r\n      name: payload.name,\r\n      created_by: payload.created_by\r\n    };\r\n\r\n    dispatch({ type: \"EDIT_CHAT\", payload: chat });\r\n  };\r\n}\r\n\r\nexport function getUsers() {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"/users\");\r\n\r\n    dispatch({ type: \"USERS_LOADED\", payload: res.data.users });\r\n  };\r\n}\r\n\r\nexport function getMessagesByChatId(chatId) {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"chats/\" + chatId + \"/messages/\");\r\n\r\n    const chatMessages = {\r\n      [chatId]: res.data.messages\r\n    };\r\n\r\n    dispatch({ type: \"MESSAGES_LOADED\", payload: chatMessages });\r\n  };\r\n}\r\n\r\nexport function sendMessage(payload) {\r\n  return async function(dispatch) {\r\n    const message = await API.post(\"/chats/messages\", {\r\n      chat_id: payload.chat_id,\r\n      text: payload.text\r\n    });\r\n\r\n    message.data.message[\"own\"] = \"true\";\r\n\r\n    dispatch({ type: \"ADD_MESSAGE\", payload: message.data.message });\r\n  };\r\n}\r\n\r\nexport function getUserById(userId) {\r\n  return async function(dispatch) {\r\n    const res = await API.get(\"/users/\" + userId);\r\n\r\n    dispatch({ type: \"USER_LOADED\", payload: res.data.user });\r\n  };\r\n}\r\n\r\nexport function updateUser(payload) {\r\n  return async function() {\r\n    const form = new FormData();\r\n\r\n    form.set(\"file\", payload.file);\r\n    form.set(\"file_name\", payload.fileName);\r\n    form.set(\"name\", payload.name);\r\n    form.set(\"email\", payload.email);\r\n\r\n    await API.put(\"/users\", form);\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return function(dispatch) {\r\n    dispatch({ type: \"LOGOUT\" });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\n\r\nimport { getUserById, logout } from \"../../store/actions/index\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  title: {\r\n    marginRight: \"auto\"\r\n  },\r\n  icon: {\r\n    position: \"relative\",\r\n    top: 5,\r\n    paddingRight: 5\r\n  }\r\n}));\r\n\r\nfunction Header(props) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (token !== null) {\r\n    dispatch(getUserById(jwtDecode(token).userId));\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n\r\n    localStorage.removeItem(\"token\");\r\n\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"primary\">\r\n      <Toolbar>\r\n        <Typography\r\n          variant=\"h6\"\r\n          component={Link}\r\n          to=\"/\"\r\n          className={classes.title}\r\n        >\r\n          <TelegramIcon className={classes.icon} />\r\n          ReactChat\r\n        </Typography>\r\n        {token === null ? (\r\n          <React.Fragment>\r\n            <Button color=\"inherit\" component={Link} to=\"/login\">\r\n              Login\r\n            </Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/register\">\r\n              Register\r\n            </Button>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Button color=\"inherit\" component={Link} to=\"/profile\">\r\n              Profile\r\n            </Button>\r\n            <Button color=\"inherit\" onClick={handleLogout}>\r\n              Logout\r\n            </Button>\r\n          </React.Fragment>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../../api\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport { addChat, editChat } from \"../../store/actions/index\";\r\n\r\nfunction ModalCreate(props) {\r\n  const { open, onClose, userId, users, edit, chatId } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [chatName, setChatName] = React.useState(\"\");\r\n  const [fieldEmpty, setFieldEmpty] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (users.length !== 0) {\r\n      const index = users.findIndex(user => user.id === userId);\r\n\r\n      if (index === 0) {\r\n        users.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    if (edit) {\r\n      API.get(\"chat/\" + chatId).then(res => {\r\n        const array = [];\r\n        users.map(user => {\r\n          for (let i = 0; i < res.data.users.length; i++) {\r\n            if (user.id === res.data.users[i]) array.push(user.id);\r\n          }\r\n          return user;\r\n        });\r\n\r\n        setChatName(res.data.name);\r\n        setChecked(array);\r\n      });\r\n    }\r\n  }, [userId, users, edit, chatId]);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleChatName = value => {\r\n    setChatName(value);\r\n    setFieldEmpty(false);\r\n  };\r\n\r\n  const createChat = () => {\r\n    if (chatName === \"\") {\r\n      setFieldEmpty(true);\r\n\r\n      return;\r\n    } else {\r\n      setFieldEmpty(false);\r\n    }\r\n\r\n    dispatch(\r\n      addChat({\r\n        name: chatName,\r\n        created_by: userId,\r\n        users: checked\r\n      })\r\n    ).then(() => onClose());\r\n  };\r\n\r\n  const updateChat = () => {\r\n    if (chatName === \"\") {\r\n      setFieldEmpty(true);\r\n\r\n      return;\r\n    } else {\r\n      setFieldEmpty(false);\r\n    }\r\n\r\n    dispatch(\r\n      editChat({\r\n        chat_id: chatId,\r\n        name: chatName,\r\n        created_by: userId,\r\n        users: checked\r\n      })\r\n    ).then(() => onClose());\r\n  };\r\n\r\n  const handleOnClose = () => {\r\n    onClose();\r\n\r\n    setChecked([]);\r\n    setChatName(\"\");\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"modal-create\" open={open} onClose={handleOnClose}>\r\n      <DialogTitle id=\"simple-dialog-title\" style={{ width: \"480px\" }}>\r\n        {edit ? \"Edit the chat\" : \"Create a new chat\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          value={chatName}\r\n          id=\"name\"\r\n          label=\"Enter chat name\"\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          onChange={e => {\r\n            handleChatName(e.target.value);\r\n          }}\r\n          error={fieldEmpty}\r\n        />\r\n        <List dense>\r\n          {users.map((user, index) => {\r\n            const labelId = `checkbox-list-secondary-label-${user.id}`;\r\n            return (\r\n              <ListItem key={user.id} button>\r\n                <ListItemAvatar>\r\n                  <Avatar src={user.avatar} />\r\n                </ListItemAvatar>\r\n                <ListItemText id={labelId} primary={user.name} />\r\n                <ListItemSecondaryAction>\r\n                  <Checkbox\r\n                    edge=\"end\"\r\n                    onChange={handleToggle(user.id)}\r\n                    checked={checked.indexOf(user.id) !== -1}\r\n                    inputProps={{ \"aria-labelledby\": labelId }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleOnClose}>Cancel</Button>\r\n        {edit ? (\r\n          <Button onClick={updateChat} color=\"primary\">\r\n            Edit\r\n          </Button>\r\n        ) : (\r\n          <Button onClick={createChat} color=\"primary\">\r\n            Create\r\n          </Button>\r\n        )}\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nModalCreate.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  userId: PropTypes.number.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n  edit: PropTypes.bool,\r\n  chatId: PropTypes.number\r\n};\r\n\r\nexport default ModalCreate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport prettyDate from \"pretty-date\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PictureAsPdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\n\r\nexport default function Message(props) {\r\n  const {\r\n    id,\r\n    name,\r\n    avatar,\r\n    own,\r\n    type,\r\n    handleEdit,\r\n    handleDelete,\r\n    createdAt\r\n  } = props;\r\n\r\n  const [messageText, setMessageText] = React.useState(props.text);\r\n  const [editing, setEditing] = React.useState(false);\r\n  const [editingValue, setEditingValue] = React.useState(\"\");\r\n  const [edited, setEdited] = React.useState(props.edited);\r\n\r\n  const handleEditMessage = e => {\r\n    if (own !== \"true\") {\r\n      return;\r\n    }\r\n\r\n    const text = e.currentTarget.querySelector(\"span.message-text\").innerHTML;\r\n    setEditingValue(text);\r\n\r\n    setEditing(true);\r\n  };\r\n\r\n  const editedMessage = e => {\r\n    const editedText = e.currentTarget;\r\n\r\n    if (editedText.value === messageText || editedText.value === \"\") {\r\n      setTimeout(() => {\r\n        setEditing(false);\r\n      }, 100);\r\n      return;\r\n    }\r\n\r\n    handleEdit(editedText.value, id);\r\n\r\n    setMessageText(editedText.value);\r\n\r\n    setTimeout(() => {\r\n      setEditing(false);\r\n    }, 100);\r\n    setEdited(true);\r\n  };\r\n\r\n  const handlerDelete = () => {\r\n    handleDelete(id);\r\n  };\r\n\r\n  const withoutTime = text => {\r\n    const array = text.split(\"_\");\r\n\r\n    array.shift();\r\n\r\n    return array.join(\"_\");\r\n  };\r\n\r\n  return (\r\n    <Paper\r\n      className={\r\n        \"chat-message \" +\r\n        (own === \"true\" ? \"chat-message-own \" : null) +\r\n        (editing ? \"full-width\" : null)\r\n      }\r\n    >\r\n      {type === \"image/jpeg\" ||\r\n      type === \"image/png\" ||\r\n      type === \"image/webp\" ||\r\n      type === \"image/gif\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <img\r\n                  alt={messageText}\r\n                  src={\r\n                    \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                    messageText\r\n                  }\r\n                  style={{ width: \"100%\", marginTop: 8 }}\r\n                />\r\n                <span className=\"created-at\">\r\n                  {prettyDate.format(new Date(createdAt))}\r\n                </span>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      ) : type === \"text\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          {editing ? (\r\n            <Input\r\n              defaultValue={editingValue}\r\n              autoFocus\r\n              onBlur={editedMessage}\r\n              style={{ width: \"100%\" }}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton edge=\"end\" onClick={handlerDelete}>\r\n                    <DeleteIcon className=\"message-delete\" />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          ) : (\r\n            <ListItemText\r\n              onDoubleClick={handleEditMessage}\r\n              primary={own !== \"false\" ? null : name}\r\n              secondary={\r\n                <React.Fragment>\r\n                  <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    color=\"textPrimary\"\r\n                  >\r\n                    <span className=\"message-text\">{messageText}</span>\r\n\r\n                    {edited ? (\r\n                      <Typography variant=\"caption\">edited</Typography>\r\n                    ) : null}\r\n                    <span className=\"created-at\">\r\n                      {prettyDate.format(new Date(createdAt))}\r\n                    </span>\r\n                  </Typography>\r\n                </React.Fragment>\r\n              }\r\n            />\r\n          )}\r\n        </ListItem>\r\n      ) : type === \"application/pdf\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            onDoubleClick={handleEditMessage}\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  <a\r\n                    className=\"message-pdf\"\r\n                    href={\r\n                      \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                      messageText\r\n                    }\r\n                  >\r\n                    <PictureAsPdfIcon />\r\n                    {withoutTime(messageText)}\r\n                  </a>\r\n\r\n                  <span className=\"created-at\">\r\n                    {prettyDate.format(new Date(createdAt))}\r\n                  </span>\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      ) : type === \"application/x-zip-compressed\" ? (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            onDoubleClick={handleEditMessage}\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  <a\r\n                    className=\"message-pdf\"\r\n                    href={\r\n                      \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                      messageText\r\n                    }\r\n                  >\r\n                    <ArchiveIcon />\r\n                    {withoutTime(messageText)}\r\n                  </a>\r\n\r\n                  <span className=\"created-at\">\r\n                    {prettyDate.format(new Date(createdAt))}\r\n                  </span>\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      ) : (\r\n        <ListItem alignItems=\"flex-start\">\r\n          {own !== \"false\" ? null : (\r\n            <ListItemAvatar>\r\n              <Avatar\r\n                alt={name}\r\n                src={\r\n                  \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" + avatar\r\n                }\r\n              />\r\n            </ListItemAvatar>\r\n          )}\r\n          <ListItemText\r\n            onDoubleClick={handleEditMessage}\r\n            primary={own !== \"false\" ? null : name}\r\n            secondary={\r\n              <React.Fragment>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  color=\"textPrimary\"\r\n                >\r\n                  <a\r\n                    className=\"message-pdf\"\r\n                    href={\r\n                      \"https://nodejschat.s3.eu-central-1.amazonaws.com/messages/\" +\r\n                      messageText\r\n                    }\r\n                  >\r\n                    <FileCopyIcon />\r\n                    {withoutTime(messageText)}\r\n                  </a>\r\n\r\n                  <span className=\"created-at\">\r\n                    {prettyDate.format(new Date(createdAt))}\r\n                  </span>\r\n                </Typography>\r\n              </React.Fragment>\r\n            }\r\n          />\r\n        </ListItem>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMessage.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string,\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  own: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  edited: PropTypes.bool,\r\n  handleEdit: PropTypes.func,\r\n  createdAt: PropTypes.string\r\n};\r\n","import React from \"react\";\r\nimport { connect, connectAdvanced } from \"react-redux\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport \"./Chat.css\";\r\nimport io from \"socket.io-client\";\r\nimport { Redirect } from \"react-router\";\r\nimport API from \"../../api\";\r\n\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\nimport ModalCreate from \"../Modals/Create\";\r\nimport Message from \"./Message\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport {\r\n  addChat,\r\n  getChats,\r\n  getUsers,\r\n  getMessagesByChatId,\r\n  sendMessage\r\n} from \"../../store/actions/index\";\r\n\r\n// const socket = io.connect(\"https://reactchats:5000\");\r\nconst socket = io.connect(\"http://localhost:5000\");\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    chats: state.chats,\r\n    users: state.users,\r\n    messages: state.messages,\r\n    currentUser: state.currentUser\r\n  };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addChat: chat => dispatch(addChat(chat)),\r\n    getChats: () => dispatch(getChats()),\r\n    getUsers: () => dispatch(getUsers()),\r\n    getMessagesByChatId: chatId => dispatch(getMessagesByChatId(chatId)),\r\n    sendMessage: message => dispatch(sendMessage(message))\r\n  };\r\n}\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      error: null,\r\n      selectedIndex: 0,\r\n      selectedChatId: 0,\r\n      open: false,\r\n      userId: 0,\r\n      chats: [],\r\n      chatsFiltered: [],\r\n      messages: [],\r\n      messagesFiltered: [],\r\n      loadingChats: true,\r\n      loadingMessages: true,\r\n      access: false,\r\n      requestSent: false,\r\n      notificate: false,\r\n      modalEdit: false\r\n    };\r\n\r\n    this.sendInput = React.createRef();\r\n    this.messagesDiv = React.createRef();\r\n\r\n    this.getChats = null;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (token === null) {\r\n      this.setState({ redirect: true });\r\n    } else {\r\n      this.setState({\r\n        userId: jwtDecode(token).userId\r\n      });\r\n    }\r\n\r\n    this.props.getChats().then(() => {\r\n      const chats = this.props.chats;\r\n      this.setState({ chatsFiltered: chats });\r\n      if (chats.length !== 0) {\r\n        const url = window.location.href;\r\n        let hash = false;\r\n\r\n        if (url.match(/#(.*)/)) {\r\n          hash = url.match(/#(.*)/)[1];\r\n        }\r\n\r\n        let chatId = chats[0].id;\r\n\r\n        if (hash) {\r\n          chatId = parseInt(hash);\r\n        }\r\n\r\n        const userId = jwtDecode(token).userId;\r\n\r\n        const indexForSelected = chats.findIndex(chat => chat.id === chatId);\r\n\r\n        this.setState({\r\n          selectedChatId: chatId,\r\n          selectedIndex: indexForSelected,\r\n          loadingChats: false\r\n        });\r\n\r\n        socket.emit(\"get access\", {\r\n          chatId,\r\n          userId\r\n        });\r\n      } else {\r\n        this.setState({ loadingChats: false, loadingMessages: false });\r\n      }\r\n    });\r\n\r\n    socket.on(\"get access\", responseAccess => {\r\n      this.setState({ access: responseAccess });\r\n\r\n      if (responseAccess) {\r\n        socket.emit(\"get messages\", {\r\n          userId: this.state.userId,\r\n          chatId: this.state.selectedChatId\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on(\"get messages\", messages => {\r\n      this.setState(\r\n        {\r\n          messages,\r\n          messagesFiltered: messages,\r\n          loadingMessages: false\r\n        },\r\n        () => {\r\n          this.messagesDiv.current.scrollTop = this.messagesDiv.current.scrollHeight;\r\n        }\r\n      );\r\n    });\r\n\r\n    socket.on(\"chat message\", message => {\r\n      this.setState({\r\n        messages: [...this.state.messages, message],\r\n        messagesFiltered: [...this.state.messages, message]\r\n      });\r\n\r\n      const notification = new Notification(\r\n        `${message.name} has sent a message`,\r\n        {\r\n          body: message.text,\r\n          tag: \"got-message\" + message.id\r\n        }\r\n      );\r\n\r\n      notification.onclick = e => {\r\n        e.preventDefault();\r\n        window.open(`http://localhost:3000/#${message.chat_id}`, \"_blank\");\r\n      };\r\n    });\r\n\r\n    socket.on(\"edit message\", editedMessage => {\r\n      this.setState({ loadingMessages: true });\r\n\r\n      const messages = [...this.state.messages];\r\n\r\n      const index = messages.findIndex(\r\n        message => message.id === editedMessage.id\r\n      );\r\n      messages[index] = editedMessage;\r\n\r\n      this.setState({\r\n        messages,\r\n        messagesFiltered: messages,\r\n        loadingMessages: false\r\n      });\r\n    });\r\n\r\n    socket.on(\"delete message\", idDeletedMessage => {\r\n      this.setState({ loadingMessages: true });\r\n\r\n      const messages = [...this.state.messages];\r\n\r\n      const index = messages.findIndex(\r\n        message => message.id === idDeletedMessage\r\n      );\r\n\r\n      messages.splice(index, 1);\r\n\r\n      this.setState({\r\n        messages,\r\n        messagesFiltered: messages,\r\n        loadingMessages: false\r\n      });\r\n    });\r\n\r\n    socket.on(\"get access\", responseAccess => {\r\n      if (responseAccess) {\r\n        socket.emit(\"get messages\", {\r\n          userId: this.state.userId,\r\n          chatId: this.state.selectedChatId\r\n        });\r\n\r\n        this.setState({ access: responseAccess });\r\n      } else {\r\n        this.setState({ access: responseAccess, loadingMessages: false });\r\n      }\r\n    });\r\n\r\n    this.props.getUsers();\r\n\r\n    function urlBase64ToUint8Array(base64String) {\r\n      var padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\r\n      var base64 = (base64String + padding)\r\n        .replace(/\\-/g, \"+\")\r\n        .replace(/_/g, \"/\");\r\n\r\n      var rawData = window.atob(base64);\r\n      var outputArray = new Uint8Array(rawData.length);\r\n\r\n      for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n      }\r\n      return outputArray;\r\n    }\r\n\r\n    navigator.serviceWorker.ready.then(serviceWorkerRegistration => {\r\n      var options = {\r\n        userVisibleOnly: true,\r\n        applicationServerKey: urlBase64ToUint8Array(\r\n          \"BBZeRDMeH6fL2sXZ9ILBxn7-f9pVWtnWmJ-6mbaEkdbZnFu2Q0DPrICFllzaFlvAu5gV5qtLFYBFd7jp2TFUHK8\"\r\n        )\r\n      };\r\n      serviceWorkerRegistration.pushManager.subscribe(options).then(\r\n        pushSubscription => {\r\n          this.setState({ notificate: true });\r\n        },\r\n        function(error) {\r\n          console.log(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  handleSearchChat(value) {\r\n    const chats = [...this.props.chats];\r\n\r\n    if (value === \"\") {\r\n      this.setState({ chatsFiltered: chats });\r\n    }\r\n\r\n    const chatsFiltered = chats.filter(chat =>\r\n      chat.name.toLowerCase().includes(value)\r\n    );\r\n\r\n    this.setState({ chatsFiltered });\r\n  }\r\n\r\n  handleSearchMessage(value) {\r\n    const messages = [...this.state.messages];\r\n\r\n    if (value === \"\") {\r\n      this.setState({ messagesFiltered: messages });\r\n    }\r\n\r\n    const messagesFiltered = messages.filter(message =>\r\n      message.text.toLowerCase().includes(value)\r\n    );\r\n\r\n    console.log(messagesFiltered);\r\n\r\n    this.setState({ messagesFiltered });\r\n  }\r\n\r\n  async handleSendMessage() {\r\n    const sendInput = await this.sendInput.current.querySelector(\"input\");\r\n\r\n    if (sendInput.value === \"\") return;\r\n\r\n    socket.emit(\"chat message\", {\r\n      userId: this.state.userId,\r\n      chatId: this.state.selectedChatId,\r\n      text: sendInput.value\r\n    });\r\n\r\n    this.setState({\r\n      messages: [\r\n        ...this.state.messages,\r\n        {\r\n          created_at: new Date(),\r\n          text: sendInput.value,\r\n          chat_id: this.state.selectedChatId,\r\n          user_id: this.state.userId,\r\n          edited: false,\r\n          type: \"text\",\r\n          own: \"true\"\r\n        }\r\n      ],\r\n      messagesFiltered: [\r\n        ...this.state.messagesFiltered,\r\n        {\r\n          created_at: new Date(),\r\n          text: sendInput.value,\r\n          chat_id: this.state.selectedChatId,\r\n          user_id: this.state.userId,\r\n          edited: false,\r\n          type: \"text\",\r\n          own: \"true\"\r\n        }\r\n      ]\r\n    });\r\n\r\n    sendInput.value = \"\";\r\n  }\r\n\r\n  handleUploadChat = event => {\r\n    let file = event.currentTarget.files[0];\r\n\r\n    const time = new Date().getTime();\r\n\r\n    const fileName = time + \"_\" + file.name;\r\n\r\n    socket.emit(\r\n      \"chat file\",\r\n      {\r\n        file,\r\n        fileType: file.type,\r\n        fileName,\r\n        userId: this.state.userId,\r\n        chatId: this.state.selectedChatId\r\n      },\r\n      () => {\r\n        this.setState({\r\n          messages: [\r\n            ...this.state.messages,\r\n            {\r\n              created_at: new Date(),\r\n              text: fileName,\r\n              chat_id: this.state.selectedChatId,\r\n              user_id: this.state.userId,\r\n              edited: false,\r\n              type: file.type,\r\n              own: \"true\"\r\n            }\r\n          ],\r\n          messagesFiltered: [\r\n            ...this.state.messagesFiltered,\r\n            {\r\n              created_at: new Date(),\r\n              text: fileName,\r\n              chat_id: this.state.selectedChatId,\r\n              user_id: this.state.userId,\r\n              edited: false,\r\n              type: file.type,\r\n              own: \"true\"\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    const handleListItemClick = (index, chatId) => {\r\n      this.setState({ requestSent: false });\r\n\r\n      socket.emit(\"leave chat\", { chatId: this.state.selectedChatId });\r\n\r\n      this.setState({\r\n        selectedIndex: index,\r\n        selectedChatId: chatId,\r\n        loadingMessages: true\r\n      });\r\n\r\n      socket.emit(\"get access\", {\r\n        chatId,\r\n        userId: this.state.userId\r\n      });\r\n\r\n      this.sendInput.current.querySelector(\"input\").value = \"\";\r\n    };\r\n\r\n    const handleClickOpenModal = () => {\r\n      this.setState({ open: true });\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n      this.setState({ open: false, modalEdit: false });\r\n    };\r\n\r\n    const handleEditedMessage = (text, messageId) => {\r\n      socket.emit(\"edit message\", {\r\n        text,\r\n        messageId,\r\n        chatId: this.state.selectedChatId\r\n      });\r\n    };\r\n\r\n    const handleDeleteMessage = messageId => {\r\n      socket.emit(\"delete message\", {\r\n        messageId,\r\n        chatId: this.state.selectedChatId\r\n      });\r\n    };\r\n\r\n    const handleRequest = () => {\r\n      const chat = this.props.chats.filter(\r\n        chat => chat.id === this.state.selectedChatId\r\n      );\r\n\r\n      API.post(\"/request\", {\r\n        chat_id: this.state.selectedChatId,\r\n        chat_name: chat[0].name,\r\n        user_id: this.state.userId,\r\n        user_name: this.props.currentUser.name,\r\n        user_email: this.props.currentUser.email\r\n      }).then(() => this.setState({ requestSent: true }));\r\n    };\r\n\r\n    const handleEditChat = chatId => {\r\n      this.setState({ modalEdit: true });\r\n    };\r\n\r\n    return (\r\n      <Paper style={{ marginTop: 32, height: \"624px\", marginBottom: 32 }}>\r\n        <Grid container>\r\n          <Grid\r\n            item\r\n            xs={3}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              height: \"624px\"\r\n            }}\r\n          >\r\n            <List component=\"nav\" className=\"chat-list\">\r\n              <ListItem\r\n                button\r\n                style={{ paddingTop: \"12px\", paddingBottom: \"12px\" }}\r\n                onClick={handleClickOpenModal}\r\n                className=\"btn-new-chat\"\r\n              >\r\n                <ListItemIcon>\r\n                  <PostAddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary=\"Create a new chat\"\r\n                  className=\"btn-new-chat-text\"\r\n                />\r\n              </ListItem>\r\n              <div className=\"chats\">\r\n                {this.state.loadingChats === true ? (\r\n                  <div style={{ textAlign: \"center\" }}>\r\n                    <CircularProgress\r\n                      color=\"secondary\"\r\n                      size={30}\r\n                      style={{ textAlign: \"center\" }}\r\n                    />\r\n                  </div>\r\n                ) : this.state.chatsFiltered.length === 0 ? (\r\n                  <h5 style={{ textAlign: \"center\" }}>\r\n                    There are no chats by this query\r\n                  </h5>\r\n                ) : (\r\n                  this.state.chatsFiltered.map((chat, index) => {\r\n                    return (\r\n                      <ListItem\r\n                        key={index}\r\n                        button\r\n                        selected={this.state.selectedIndex === index}\r\n                        onClick={event => handleListItemClick(index, chat.id)}\r\n                      >\r\n                        <ListItemText primary={chat.name} />\r\n                        {chat.created_by === this.state.userId ? (\r\n                          <EditIcon\r\n                            className=\"chat-icon\"\r\n                            onClick={() => {\r\n                              handleEditChat(chat.id);\r\n                              handleClickOpenModal();\r\n                            }}\r\n                          />\r\n                        ) : null}\r\n                      </ListItem>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n            </List>\r\n            <TextField\r\n              id=\"chat-search\"\r\n              label=\"Search by chat name\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              onChange={e => {\r\n                this.handleSearchChat(e.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={9}\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"space-between\",\r\n              height: \"624px\",\r\n              borderLeft: \"1px solid rgba(0, 0, 0, .14)\"\r\n            }}\r\n          >\r\n            <TextField\r\n              id=\"message-search\"\r\n              label=\"Search by message\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              onChange={e => {\r\n                this.handleSearchMessage(e.target.value);\r\n              }}\r\n            />\r\n            <div ref={this.messagesDiv} className=\"chat-messages\">\r\n              {this.state.loadingMessages === true ? (\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <CircularProgress\r\n                    color=\"secondary\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  />\r\n                </div>\r\n              ) : this.state.access ? (\r\n                this.state.messagesFiltered.length === 0 ? (\r\n                  <h3 style={{ textAlign: \"center\" }}>\r\n                    There are no messages in this chat\r\n                  </h3>\r\n                ) : (\r\n                  this.state.messagesFiltered.map((message, index) => {\r\n                    return (\r\n                      <Message\r\n                        key={message.id}\r\n                        id={message.id}\r\n                        name={message.name}\r\n                        avatar={message.avatar}\r\n                        text={message.text}\r\n                        own={message.own}\r\n                        type={message.type}\r\n                        edited={message.edited}\r\n                        handleEdit={handleEditedMessage}\r\n                        handleDelete={handleDeleteMessage}\r\n                        createdAt={message.created_at}\r\n                      />\r\n                    );\r\n                  })\r\n                )\r\n              ) : (\r\n                <React.Fragment>\r\n                  <h3 style={{ textAlign: \"center\" }}>\r\n                    You have no permission to join this chat\r\n                  </h3>\r\n\r\n                  {this.state.requestSent ? (\r\n                    <h4 style={{ textAlign: \"center\", marginTop: 0 }}>\r\n                      Request has been sent\r\n                    </h4>\r\n                  ) : (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={handleRequest}\r\n                    >\r\n                      Send a request to join\r\n                    </Button>\r\n                  )}\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n            <Paper className=\"message-form\">\r\n              <InputBase\r\n                className=\"message-input\"\r\n                placeholder=\"...\"\r\n                ref={this.sendInput}\r\n              />\r\n              <input\r\n                style={{ display: \"none\" }}\r\n                id=\"icon-button-file\"\r\n                type=\"file\"\r\n                onChange={this.handleUploadChat}\r\n              />\r\n              <label htmlFor=\"icon-button-file\">\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  aria-label=\"upload picture\"\r\n                  component=\"span\"\r\n                >\r\n                  <AttachFileIcon />\r\n                </IconButton>\r\n              </label>\r\n              <IconButton\r\n                className=\"message-icon\"\r\n                aria-label=\"search\"\r\n                onClick={event => this.handleSendMessage(event)}\r\n              >\r\n                <SendIcon color=\"primary\" />\r\n              </IconButton>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <ModalCreate\r\n          open={this.state.open}\r\n          onClose={handleCloseModal}\r\n          userId={this.state.userId}\r\n          users={this.props.users}\r\n          edit={this.state.modalEdit}\r\n          chatId={this.state.selectedChatId}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React from \"react\";\r\nimport API from \"../../api\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    API.post(\"/login\", {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    })\r\n      .then(res => {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n\r\n        this.setState({ redirect: true });\r\n      })\r\n      .catch(error => this.setState({ error: error.response.data.message }));\r\n  }\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleSubmit} style={{ marginBottom: 32 }}>\r\n        <h1 style={{ marginBottom: 24 }}>Login</h1>\r\n        <TextValidator\r\n          name=\"email\"\r\n          label=\"Your email\"\r\n          variant=\"outlined\"\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"isEmail\"]}\r\n          errorMessages={[\"This field is required\", \"Email is not valid\"]}\r\n        />\r\n        <TextValidator\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={this.state.password}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"minStringLength:6\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"This field must be equal 6 or more symbols\"\r\n          ]}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          fullWidth\r\n        >\r\n          Sign In\r\n        </Button>\r\n        {this.state.error != null ? (\r\n          <h3 className=\"text-error\">{this.state.error}</h3>\r\n        ) : null}\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport API from \"../../api\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      redirect: false,\r\n      error: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    const target = event.target;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    API.post(\"/register\", {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    })\r\n      .then(res => {\r\n        this.setState({ redirect: true });\r\n      })\r\n      .catch(error => this.setState({ error: error.response.data.message }));\r\n  }\r\n\r\n  render() {\r\n    const { redirect } = this.state;\r\n\r\n    if (redirect) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleSubmit} style={{ marginBottom: 32 }}>\r\n        <h1 style={{ marginBottom: 24 }}>Register</h1>\r\n        <TextValidator\r\n          name=\"name\"\r\n          label=\"Your name\"\r\n          variant=\"outlined\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"minStringLength:2\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"This field must be equal 2 or more symbols\"\r\n          ]}\r\n        />\r\n        <TextValidator\r\n          name=\"email\"\r\n          label=\"Your email\"\r\n          variant=\"outlined\"\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"isEmail\"]}\r\n          errorMessages={[\"This field is required\", \"Email is not valid\"]}\r\n        />\r\n        <TextValidator\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={this.state.password}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"minStringLength:6\"]}\r\n          errorMessages={[\r\n            \"This field is required\",\r\n            \"This field must be equal 6 or more symbols\"\r\n          ]}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          fullWidth\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        {this.state.error != null ? (\r\n          <h3 className=\"text-error\">{this.state.error}</h3>\r\n        ) : null}\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nimport { getUserById, updateUser } from \"../../store/actions/index\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { currentUser: state.currentUser };\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getUserById: user => dispatch(getUserById(user)),\r\n    updateUser: user => dispatch(updateUser(user))\r\n  };\r\n}\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      error: null,\r\n      name: \"\",\r\n      email: \"\",\r\n      avatar: null,\r\n      file: null,\r\n      fileName: \"\"\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      this.setState({ redirect: true });\r\n    }\r\n\r\n    const userId = jwtDecode(token).userId;\r\n\r\n    this.props.getUserById(userId).then(() =>\r\n      this.setState({\r\n        name: this.props.currentUser.name,\r\n        email: this.props.currentUser.email,\r\n        avatar:\r\n          \"https://nodejschat.s3.eu-central-1.amazonaws.com/\" +\r\n          this.props.currentUser.avatar\r\n      })\r\n    );\r\n  }\r\n\r\n  handleChange = event => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.name === \"\" || this.state.email === \"\") return;\r\n\r\n    this.props.updateUser({\r\n      file: this.state.file,\r\n      fileName: this.state.fileName,\r\n      name: this.state.name,\r\n      email: this.state.email\r\n    });\r\n  };\r\n\r\n  handleUpload = event => {\r\n    event.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = event.currentTarget.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        file: file,\r\n        fileName: this.props.currentUser.id + \"_\" + file.name,\r\n        avatar: reader.result\r\n      });\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ValidatorForm onSubmit={this.handleSubmit} style={{ marginBottom: 32 }}>\r\n        <h1 style={{ marginBottom: 24 }}>Your profile</h1>\r\n        <Avatar\r\n          src={this.state.avatar}\r\n          style={{ marginBottom: 16, width: 150, height: 150 }}\r\n        />\r\n        <input\r\n          accept=\"image/*\"\r\n          id=\"outlined-button-file\"\r\n          type=\"file\"\r\n          style={{ display: \"none\" }}\r\n          onChange={this.handleUpload}\r\n        />\r\n        <label htmlFor=\"outlined-button-file\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            component=\"span\"\r\n            style={{ width: 150, marginBottom: 32 }}\r\n          >\r\n            Upload\r\n          </Button>\r\n        </label>\r\n        <TextValidator\r\n          name=\"name\"\r\n          label=\"Your name\"\r\n          variant=\"outlined\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\"]}\r\n          errorMessages={[\"This field is required\"]}\r\n        />\r\n        <TextValidator\r\n          name=\"email\"\r\n          label=\"Your email\"\r\n          variant=\"outlined\"\r\n          value={this.state.email}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          style={{ marginBottom: 16 }}\r\n          validators={[\"required\", \"isEmail\"]}\r\n          errorMessages={[\"This field is required\", \"Email is not valid\"]}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          fullWidth\r\n        >\r\n          Update profile data\r\n        </Button>\r\n        {this.state.error != null ? (\r\n          <h3 className=\"text-error\">{this.state.error}</h3>\r\n        ) : null}\r\n      </ValidatorForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Header from \"./Components/Header/Header\";\r\nimport Chat from \"./Components/Chat/Chat\";\r\nimport Login from \"./Components/Auth/Login\";\r\nimport Register from \"./Components/Auth/Register\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Header />\r\n        <Container>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Chat />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <Login />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}